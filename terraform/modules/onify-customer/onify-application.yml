resource "kubernetes_secret" "onify-app" {
  metadata {
    name      = "${var.client}-onify-app"
    namespace = var.client
  }
  data = {
    api_token = var.onify-app_app_token
  }
  type = "Opaque"
}

resource "kubernetes_config_map" "onify-app" {
  metadata {
    name      = "${var.client}-onify-app"
    namespace = var.client
  }

  data = {
    NODE_ENV              = "production"
    ENV_PREFIX            = "ONIFY_"
    INTERPRET_CHAR_AS_DOT = "_"
    ONIFY_api_internalUrl = "http://${var.client}-onify-app:8181/api/v2"
    ONIFY_api_externalUrl = "/api/v2"
  }
}

resource "Deployment" "onify-app" {
  metadata {
    name      = "onify-app-${var.client}"
    namespace = var.client
    labels = {
      app  = "onify-app-${var.client}"
      name = "onify-app-${var.client}"
    }
  }
  spec {
    replicas = var.deployment_replicas
    selector {
      match_labels = {
        app  = "onify-app-${var.client}"
        task = "onify-app-${var.client}"
      }
    }
    template {
      metadata {
        labels = {
          app  = "onify-app-${var.client}"
          task = "onify-app-${var.client}"
        }
      }
      spec {
        image_pull_secrets {
          name = "onify-regcred"
        }
        container {
          image = "eu.gcr.io/onify-images/hub/app:${var.onify-app_version}"
          name  = "onfiy-api"
          resources {
            limits = {
              cpu    = var.cpu_limit
              memory = var.memory_limit
            }
            requests = {
              cpu    = var.cpu_requests
              memory = var.memory_requests
            }
          }
          port {
            name           = "onify-app"
            container_port = 3000
          }
          env_from {
            config_map_ref {
              name = "${var.client}-onify-app"
            }
          }
          env {
            name  = "ONIFY_disableAdminEndpoints"
            value = false
          }
          env {
            name = "ONIFY_adminUser_password"
            value_from {
              secret_key_ref {
                name = "${var.client}-onify-app"
                key  = "api_token"
              }
            }
          }
          env {
            name = "ONIFY_api_admintoken"
            value_from {
              secret_key_ref {
                name = "${var.client}-onify-app"
                key  = "app_token_secret"
              }
            }
          }
          volume_mount {
            name       = "data-onify-app-${var.client}"
            mount_path = "/usr/share/onify"
          }
        }
      }
    }
  }
  depends_on = [kubernetes_namespace.client]
}

resource "kubernetes_service" "onify-app" {
  metadata {
    name      = "onify-app-${var.client}"
    namespace = var.client
    annotations = {
      "cloud.google.com/load-balancer-type" = "Internal"
    }
  }
  spec {
    selector = {
      app  = "onify-app-${var.client}"
      task = "onify-app-${var.client}"
    }
    port {
      name     = "onify-app"
      port     = 3000
      protocol = "TCP"
    }
    type = "NodePort"
    //type = "LoadBalancer"
  }
  depends_on = [kubernetes_namespace.client]
}
